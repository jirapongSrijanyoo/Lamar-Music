const { Client, GatewayIntentBits, Collection, REST, Routes, Events, EmbedBuilder, ActivityType } = require('discord.js');
const { Manager } = require('sakulink');
const fs = require('fs');
const path = require('path');
const config = require('./config.json');

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildVoiceStates,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
  ],
});

client.commands = new Collection();
client.slashCommands = new Collection();

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á prefix commands
const validateCommands = () => {
  const commandFiles = fs.readdirSync('./prefixCommands').filter(file => file.endsWith('.js'));
  commandFiles.forEach(file => {
    try {
      const command = require(`./prefixCommands/${file}`);
      client.commands.set(command.name, command);
      if (command.aliases) {
        command.aliases.forEach(alias => client.commands.set(alias, command));
      }
      console.log(`‚úÖ  Prefix command "${command.name}" ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
    } catch (error) {
      console.error(`‚ùå  ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á prefix command "${file}" ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
    }
  });
};

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á slash commands
const loadSlashCommands = () => {
  const slashCommandFiles = fs.readdirSync('./slashCommands').filter(file => file.endsWith('.js'));
  const registeredCommands = new Set();  // ‡πÉ‡∏ä‡πâ Set ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
  for (const file of slashCommandFiles) {
    try {
      const command = require(`./slashCommands/${file}`);
      if (!registeredCommands.has(command.data.name)) {
        client.slashCommands.set(command.data.name, command);
        registeredCommands.add(command.data.name);
        console.log(`‚úÖ  Slash command "${command.data.name}" ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
      }
    } catch (error) {
      console.error(`‚ùå  slash command "${file}" has an error.: ${error.message}`);
    }
  }
};

// ‡∏•‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á slash commands ‡πÉ‡∏´‡πâ‡πÉ‡∏´‡∏°‡πà (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Global Commands)
const removeAndRegisterCommands = async () => {
  const rest = new REST({ version: '10' }).setToken(config.token);

  try {
    console.log('‚è≥  ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...');

    // ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÇ‡∏Å‡∏ö‡∏≠‡∏•)
    const globalCommands = await rest.get(Routes.applicationCommands(client.user.id));
    for (const command of globalCommands) {
      await rest.delete(Routes.applicationCommand(client.user.id, command.id));
    }

    console.log('‚úÖ  ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÇ‡∏Å‡∏•‡∏ö‡∏≠‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!!');

    // ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏ó‡∏∏‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå)
    const guilds = client.guilds.cache;
    for (const guild of guilds.values()) {
      const guildCommands = await rest.get(Routes.applicationGuildCommands(client.user.id, guild.id));
      for (const command of guildCommands) {
        await rest.delete(Routes.applicationGuildCommand(client.user.id, guild.id, command.id));
      }
    }

    console.log('‚úÖ  ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà (‡πÇ‡∏Å‡∏ö‡∏≠‡∏•‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
    const slashCommandsData = client.slashCommands.map(command => command.data.toJSON());
    await rest.put(Routes.applicationCommands(client.user.id), { body: slashCommandsData });

    console.log('‚úÖ  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÇ‡∏Å‡∏•‡∏ö‡∏≠‡∏•‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!!');
  } catch (error) {
    console.error('‚ùå  Error deleting or adding command.:', error);
  }
};

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Lavalink Manager ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
const nodes = [{
  identifier: config.lavalink.identifier,
  host: config.lavalink.host,
  port: config.lavalink.port,
  password: config.lavalink.password,
  secure: config.lavalink.secure,
}];

client.manager = new Manager({
  shards: client.shard?.count ?? 1,
  autoPlay: true,
  defaultSearchPlatform: 'youtube music',
  nodes: nodes,
  send: (id, payload) => {
    const guild = client.guilds.cache.get(id);
    if (guild) guild.shard.send(payload);
  },
});

client.manager.on('nodeConnect', node => {
  console.log(`Node "${node.options.identifier}" connected.`);
});

client.manager.on('nodeError', (node, error) => {
  console.log(`Node "${node.options.identifier}" encountered an error: ${error.message}.`);
});

//‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ö‡∏≠‡∏ó ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
const activityMessages = [
  'üõ† ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ô 2.0.4 ‡πÄ‡∏ö‡∏ï‡πâ‡∏≤',
  'üìú /‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á | ‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
  'üîé ‡∏Ñ‡∏•‡∏±‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå: 0 | {guildCount} ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå',
  'üìÄ /‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á | ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á',
  'üìú Tio Project',
  'üçÄ ‡πÇ‡∏´‡∏ô‡∏î jirayu.net',
  'üß© sakulink@v1.2.10',
  'ü§ç ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ loma_0531',
];

let activityIndex = 0;

const updateActivity = async () => {
  const files = fs.readdirSync('./Data_Discord_server').filter(file => file.endsWith('.json')).length;
  const message = activityMessages[activityIndex].replace('{guildCount}', files);
  await client.user.setActivity({
    type: ActivityType.Custom,
    name: message,
  });
  activityIndex = (activityIndex + 1) % activityMessages.length;
};

client.once(Events.ClientReady, async () => {
  const { user } = client;

  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ASCII Art ‡∏ï‡∏≠‡∏ô‡∏ö‡∏≠‡∏ó‡∏£‡∏±‡∏ô
  console.log(`‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù
   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë        ‚ñà‚ñà‚ïë   
   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë        ‚ñà‚ñà‚ïë   
   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù    ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   
   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù     ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù`);

  if (user) {
    console.log(`||========================================||\n` +
                `||üü¢  Bot is online\n` +
                `|| Logged in as : ${user.tag} \n` +
                `||========================================||\n` +
                `||üìú  ¬©2024 Tio Project\n` +
                `||üõ†  Version : 2.0.4 Beta\n` +
                `||üîé  Cluster : 0 | ${fs.readdirSync('./Data_Discord_server').filter(file => file.endsWith('.json')).length} Server\n` +
                `||üß©  Sakulink version : v1.2.10\n` +
                `||========================================||\n` +
                `|| Developed by loma_0531 ü§ç\n` +
                `|| Consultant : nong_mam , jirayu_sri  ü§ç\n` +
                `||========================================||`);
  }

  validateCommands();
  loadSlashCommands();
  await removeAndRegisterCommands();

  client.manager.init(user.id);

// ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  updateActivity();
  setInterval(updateActivity, 5000);

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÑ‡∏ü‡∏•‡πå Data ‡∏ó‡∏∏‡∏Å 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  updateServerData();
  setInterval(updateServerData, 10000);
});

client.on('raw', d => client.manager.updateVoiceState(d));

// Prefix Command Handler
client.on('messageCreate', async (message) => {
  if (message.author.bot || !message.guild) return;

  const guildId = message.guild.id;
  const dataPath = path.join(__dirname, 'Data_Discord_server', `${guildId}.json`);
  let guildData = { prefix: config.prefix }; // ‡πÉ‡∏ä‡πâ prefix ‡∏à‡∏≤‡∏Å config ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡∏´‡∏≤‡∏Å‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô prefix ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ô‡∏±‡πâ‡∏ô‡∏Å‡πá‡∏à‡∏∞‡πÉ‡∏ä‡πâ prefix ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏ú‡∏•‡∏Å‡∏±‡∏ö prefix ‡∏´‡∏•‡∏±‡∏Å

  if (fs.existsSync(dataPath)) {
    guildData = JSON.parse(fs.readFileSync(dataPath, 'utf-8'));
  }

  const prefix = guildData.prefix || config.prefix;
  if (!message.content.startsWith(prefix)) return;

  const args = message.content.slice(prefix.length).trim().split(/ +/);
  const commandName = args.shift().toLowerCase();
  const command = client.commands.get(commandName);

  if (!command) return;

  try {
    await command.execute(message, args, client);
  } catch (error) {
    console.error(error);
    const errorEmbed = new EmbedBuilder()
      .setTitle('Error')
      .setDescription('‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ!')
      .setColor(0xff0000);
    message.reply({ embeds: [errorEmbed] });
  }
});

// Slash Command Handler
client.on('interactionCreate', async (interaction) => {
  if (!interaction.isCommand()) return;

  const { commandName, options, guildId, user } = interaction;
  const command = client.slashCommands.get(commandName);

  if (!command) return;

  try {
    await command.execute(interaction, client); // ‡∏™‡πà‡∏á client ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô execute ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Slash
  } catch (error) {
    console.error(error);
    await interaction.reply({ content: '‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ!', ephemeral: true });
  }
});


// ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÑ‡∏ü‡∏•‡πå Data ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Data ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà
const updateServerData = () => {
  const guilds = client.guilds.cache;

  guilds.forEach(guild => {
    const dataPath = path.join(__dirname, 'Data_Discord_server', `${guild.id}.json`);
    
    if (fs.existsSync(dataPath)) {
      const guildData = JSON.parse(fs.readFileSync(dataPath, 'utf-8'));
      guildData.guildId = guild.id;
      guildData.name = guild.name;
      fs.writeFileSync(dataPath, JSON.stringify(guildData, null, 2));
    } else {
      const guildData = {
        guildId: guild.id,
        name: guild.name,
        roleIds: [],
        messageIds: [],
        channelIds: [],
        adminRole: [],
        yellowRoleId: "",
        orangeRoleId: "",
        musicChannelID: "",
        musicMessageID: ""
      };
      if (!fs.existsSync('Data_Discord_server')) {
        fs.mkdirSync('Data_Discord_server');
      }
      fs.writeFileSync(dataPath, JSON.stringify(guildData, null, 2));
    }
  });
};

// ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå Data ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
client.on(Events.GuildDelete, guild => {
  const filePath = path.join(__dirname, 'Data_Discord_server', `${guild.id}.json`);
  if (fs.existsSync(filePath)) {
    fs.unlinkSync(filePath);
    console.log(`‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå ${guild.id} ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö.`);
  }
});

// ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ö‡∏≠‡∏ó ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Node "‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏ô‡∏î lavalink" connected. ‡πÉ‡∏´‡πâ‡∏£‡∏µ‡∏î‡∏¥‡∏™‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∂‡∏á‡πÉ‡∏ô‡πÄ‡∏ß‡πá‡∏ö  ctrl+F5 ‡πÉ‡∏ô‡πÅ‡∏≠‡∏û ctrl+R ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á slash ‡πÑ‡∏î‡πâ
client.login(config.token);
